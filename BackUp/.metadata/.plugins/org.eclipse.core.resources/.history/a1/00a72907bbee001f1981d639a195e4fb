package com.celcom.Bank;

import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

class AccountList {

    private List<Account> bank = new ArrayList<>();
    private Scanner sc = new Scanner(System.in);

    // Method to add an account
    void setData() {
        System.out.println("Enter Account Number, Holder Name, Branch Name, and Phone Number:");
        int accountNumber = sc.nextInt();
        String accountHolderName = sc.next();
        String branchName = sc.next();
        long phoneNumber = sc.nextLong();

        // Check if account already exists
        if (findAccount(accountNumber) != null) {
            System.out.println("Account Already Exists.");
            return;
        }

        // Create and add new account
        Account account = new Account(accountNumber, accountHolderName, branchName, phoneNumber);
        bank.add(account);
        System.out.println("Account Created Successfully.");
        System.out.println("--------------------");
    }

    // Deposit money
    void deposit(int accountNumber, int amount) {
        Account account = findAccount(accountNumber);
        if (account != null) {
            account.deposit(amount);
            System.out.println("Amount was successfully credited.");
        } else {
            System.out.println("Account not found.");
        }
    }

    // Withdraw money
    void withDraw(int accountNumber, int amount) {
        Account account = findAccount(accountNumber);
        if (account != null) {
            account.withDraw(amount);
            System.out.println("Amount Debited successfully.");
        } else {
            System.out.println("Account not found.");
        }
    }

    // Retrieve a single account's details
    void getCurrentAccountDetails(int accountNumber) {
        Account account = findAccount(accountNumber);
        if (account != null) {
            System.out.println("Account Holder Name: " + account.accountHolderName);
            System.out.println("Account Number: " + account.accountNumber);
            System.out.println("Branch Name: " + account.branchName);
            System.out.println("Account Balance: " + account.balance);
            System.out.println("Customer Phone Number: " + account.phoneNumber);
            System.out.println("-----------------------");
        } else {
            System.out.println("Account not found.");
        }
    }

    // Retrieve all account details
    void getAllAccountDetails() {
        for (Account account : bank) {
            System.out.println("Account Holder Name: " + account.accountHolderName);
            System.out.println("Account Number: " + account.accountNumber);
            System.out.println("Branch Name: " + account.branchName);
            System.out.println("Customer Phone Number: " + account.phoneNumber);
            System.out.println("Account Balance: " + account.balance);
            System.out.println("------------------------");
        }
    }

    // Method to find an account by its number
    private Account findAccount(int accountNumber) {
        for (Account account : bank) {
            if (account.accountNumber == accountNumber) {
                return account;
            }
        }
        return null;
    }
}
